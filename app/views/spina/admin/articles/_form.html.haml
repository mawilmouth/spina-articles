- content_for(:permanent_notice) do
  - unless current_account.robots_allowed?
    .permanent-notice.permanent-notice-info
      = icon('search')
      %p
        =t 'spina.pages.invisible_to_search_engines'
        %small=t 'spina.pages.invisible_to_search_engines_description'

- if @article.errors.any?
  - content_for :notifications do
    .notification.notification-danger.animated.fadeInRight
      = icon('exclamation')
      .notification-message
        =t 'spina.notifications.alert'
        %small= @article.errors.full_messages.join('<br />').html_safe
      = link_to '#', data: {close_notification: true} do
        = icon('cross')

%header#header
  .breadcrumbs
    = render_breadcrumbs separator: '<div class="divider"></div>'
    - unless @article.new_record?
      = link_to main_app.article_path(@article), target: :blank, class: 'button button-hollow button-small' do
        %i.icon.icon-export{style: 'margin: 0'}

  #header_actions
    %button.button.button-primary{type: 'submit'}
      = icon('check')
      = t('spina.articles.save', scaffold_name: t('spina.articles.scaffold_name'))
    = link_to t('spina.cancel'), spina.admin_articles_path, class: 'button button button-secondary'

#page_content.tab-content.active.well
  .horizontal-form
    .horizontal-form-group
      .horizontal-form-label
        = Spina::Page.human_attribute_name :title
      .horizontal-form-content
        = f.text_field :title
    .horizontal-form-group
      .horizontal-form-label
        Subtitle
      .horizontal-form-content
        = f.text_field :subtitle
    .horizontal-form-group
      .horizontal-form-label
        Description
      .horizontal-form-content
        = f.text_area :description
    .horizontal-form-group
      .horizontal-form-label
        Content
      .horizontal-form-content
        = render 'spina/admin/shared/rich_text_field', f: f, field: :body
    .horizontal-form-group
      .horizontal-form-label
        Category
      .horizontal-form-content
        = f.collection_select :spina_category_id, Spina::Category.all, :id, :title, prompt: true
    .horizontal-form-group
      .horizontal-form-label
        Image
      .horizontal-form-content
        .page-form-label
          .page-form-control{data: {controller: "image-form"}}
            .page-form-media-picker
              %div{style: "width: 100%"}
                = link_to admin_media_picker_path(selected_ids: [f.object.image_id], input: "media_picker_#{f.object.object_id}", mode: "single"), remote: true, class: 'image', data: {target: 'image-form.image'} do
                  .page-form-media-picker-placeholder=t "spina.images.choose_image"
                  %div{id: "media_picker_#{f.object.object_id}"}
                    = f.hidden_field :image_id, data: {target: 'image-form.imageId'}
                    = hidden_field_tag :signed_blob_id, nil, data: {target: 'image-form.signedBlobId'}
                    = hidden_field_tag :filename, nil, data: {target: 'image-form.filename'}
                  %div{style: "width: 200px; height: 150px; overflow: hidden"}
                    - if f.object&.image&.file&.attached?
                      .image
                        = image_tag main_app.url_for(f.object.image.file.variant(resize: "300x300^", crop: "300x300+0+0"))

                = hidden_field_tag :alt, placeholder: "Alt text", class: 'page-form-media-picker-alt-text'

              = button_tag type: :default, class: 'button button-small button-default', data: {action: "image-form#remove"} do
                %i.icon.icon-cross{style: "margin: 0; font-size: 10px"}


    .horizontal-form-group
      .horizontal-form-label
        Publish date
      .horizontal-form-content
        = f.text_field :publish_date, value: (@article.publish_date.strftime("%d-%m-%Y") unless @article.new_record?), class: 'datepicker'
    .horizontal-form-group
      .horizontal-form-label
        Author
      .horizontal-form-content
        = f.text_field :author
    .horizontal-form-group
      .horizontal-form-label
        Draft?
      .horizontal-form-content
        = f.check_box :draft, data: { switch: true }

- unless @article.new_record?
  .pull-right= link_to t('spina.permanently_delete'), spina.admin_article_path(@article.id), method: :delete, data: {confirm: t('spina.articles.delete_confirmation', subject: @article.title) }, class: 'button button-link button-danger'
